const TelegramBot = require('node-telegram-bot-api');
const token = '5632609691:AAHJ6CvPeasSSrUHoGZePHEeLudoZv3sIR4';
const bot = new TelegramBot(token, { polling: true });
const { menu, reg, partners, ourcars, searchcar, profile, editprofile } = require('./keyboards');
const sequelize = require('./db');
const Users = require("./models");

const express = require('express');
const fileUpload = require('express-fileupload');
const cors = require('cors');
const fs = require('fs');
const uuid = require('uuid');
const path = require("path");


const app = express();

app.use(express.json());
app.use("/api/image", express.static("img"));

app.use(cors());

app.use(fileUpload({}));

const port = process.env.PORT || 5000;

app.listen(port, () =>
	console.log(`App is listening on port ${port}.`)
);

app.get('/api', async (req, res) => {
	return res.json('work');
})

const start = async () => {

	try {
		await sequelize.authenticate()
		await sequelize.sync()
		console.log('Connection has been established successfully.');
	} catch (e) {
		console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–¥ —Å–ª–æ–º–∞–ª–æ—Å—å', e);
	}

	bot.setMyCommands([
		{ command: '/info', description: '–û –∫–ª—É–±–µ' }
	])

	bot.on('message', async (msg) => {
		const text = msg.text;
		const chatId = msg.chat.id;

		app.post('/api/upload', async (req, res) => {

			try {

				const { avatar } = req.files;

				const type = avatar.name.split('.').pop();

				let fileName = chatId + "." + type;

				try {
					avatar.mv(path.resolve(__dirname, "..", "bot-back/img/users_cars", fileName));
				} catch (error) {
					console.log(error);
				}
				// console.log(fileName);
				console.log(avatar);

				return res.json(fileName);
			} catch (err) {
				res.status(500).send(err);
			}
		})

		app.post("/api/upload/remove", (req, res) => {

			let { file } = req.body;
			console.log(file);

			if (file !== " ") {
				fs.access(
					path.resolve(__dirname, "..", "bot-back/img/users_cars", file),
					function (err, stats) {
						console.log(stats); //here we got all information of file in stats variable

						if (err) {
							return res.json("err");
						}

						fs.unlink(path.resolve(__dirname, "..", "bot-back/img/users_cars", file), function (err) {
							if (err) return console.log(err);
							console.log("file deleted successfully");
						});
					}
				);
			}
		})

		try {
			if (text === '/start') {
				return bot.sendMessage(
					chatId,
					'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–π–¥–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é',
					reg
				)
			}
			if (text === "/info") {
				return (
					bot.sendMessage(
						chatId,
						`–ü—Ä–∏–≤–µ—Ç –ø—Ä–∏–≤–µ–µ–µ—Ç!\n–ù–∞ —Å–≤—è–∑–∏ VW/SK CLUB 21 - –∫—Ä—É–ø–Ω–µ–π—à–µ–µ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤–∞–≥–æ–≤–æ–¥–æ–≤ –ß—É–≤–∞—à–∏–∏‚òùüèª\n\n–ú—ã - –æ–¥–Ω–∞ –±–æ–ª—å—à–∞—è —Å–µ–º—å—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ—Ä–∂–∏—Ç—Å—è –¥—Ä—É–≥ –∑–∞ –¥—Ä—É–≥–∞, –¥–µ–ª–∏—Ç—Å—è —Å–≤–æ–∏–º–∏ —Ä–∞–¥–æ—Å—Ç—è–º–∏ –∏ –Ω–µ—É–¥–∞—á–∞–º–∏, –∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–∂–∏–≤–∞—é—Ç —ç—Ç–æ, –ø–æ–º–æ–≥–∞—é—Ç –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç!\n–í—Å–µ –ª—é–±—è—Ç –ø–æ–∫—Ä–∞—Å–æ–≤–∞—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –ª–∞—Å—Ç–æ—á–∫–∞–º–∏ –∏ –º—ã –Ω–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µüí•\n–í–≤–∏–¥—É —ç—Ç–æ–≥–æ —É –Ω–∞—Å —Å—Ç–∞–±–∏–ª—å–Ω–æ –ø—Ä–æ—Ö–æ–¥—è—Ç –∞–≤—Ç–æ–≤—Å—Ç—Ä–µ—á–∏, –≥–¥–µ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –≤—Å—è –Ω–∞—à–∞ –¥—Ä—É–∂–Ω–∞—è —Å–µ–º—å—è –∏ –æ–±—Å—É–∂–¥–∞–µ—Ç –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≤ –±–æ–ª—å—à–æ–º –∫—Ä—É–≥—É.\n–ê –∑–∞—Ç–µ–º —Ñ–ª–∞–≥–∏ –≤ —Ä—É–∫–∏ –∏ –≤ –∫–æ–Ω–≤–æ–π.\n–ú—ã –ø—Ä–æ–µ–∑–∂–∞–µ–º –ø–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–º —É–ª–∏—Ü–∞–º –ß–µ–±–æ–∫—Å–∞—Ä, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –¥—Ä—É–∂–Ω–æ—Å—Ç—å.\n–ù–µ –∑–∞–±—É–¥–µ–º —Å–∫–∞–∑–∞—Ç—å –∏ –ø—Ä–æ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö —É –Ω–∞—Å –Ω–µ–º–∞–ª–æ. –ò —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è. –û—Ç –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã –¥–æ —Ä–µ–º–æ–Ω—Ç–∞ —Ç—É—Ä–±–∏–Ω—ã - –æ–≥—Ä–æ–º–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ñ–µ—Ä –≥–æ—Ç–æ–≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª—É–±–Ω—É—é —Å–∫–∏–¥–∫—É –¥–ª—è —Ç–∞–∫–∏—Ö —É–º–Ω–∏—á–µ–∫ –∏ –º–æ–ª–æ–¥—Ü–æ–≤üòÇüòÇ\n\n–£ —Ç–µ–±—è –Ω–µ—Ç –í–ê–ì–∞, –Ω–æ —Ç—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —Ñ–∞–Ω–∞—Ç –Ω–µ–º–µ—Ü–∫–æ–≥–æ –∞–≤—Ç–æ–ø—Ä–æ–º–∞? –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π –∏ –ø—Ä–∏—Ö–æ–¥–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á—Éü•∞ –ú—ã –ª—é–±–∏–º –∏ —É–≤–∞–∂–∞–µ–º –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞.\n–î—É–º–∞–µ–º, —á—Ç–æ —Å—Ç–∞–ª–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–Ω—è—Ç–Ω–µ–µ.\n–ü–æ—ç—Ç–æ–º—É —á–µ–≥–æ –∂–¥–∞—Ç—å - –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –Ω–∞–º –≤ –∫–ª—É–±!!!üéâüéäüéâüéäüéâ`
					)
				)
			}
			if (text === "–í—Å—Ç—Ä–µ—á–∏") {
				await bot.sendPhoto(chatId, './img/event.jpeg');
				await bot.sendLocation(chatId, 56.135323, 47.242850);
				return (
					bot.sendMessage(
						chatId,
						`–î–∞—Ç–∞: 16/10/2022\n–í—Ä–µ–º—è: 20:00\n–ú–µ—Å—Ç–æ: –¢–¶ –ö–∞—Ä—É—Å–µ–ª—å`,
						menu
					)
				)
			}
			if (text === "–ü–∞—Ä—Ç–Ω–µ—Ä—ã") {
				return (
					bot.sendMessage(
						chatId,
						`–í—ã–±–µ—Ä–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏ –ø–æ–ª—É—á–∏ —Å–∫–∏–¥–∫—É üëá`,
						partners
					)
				)
			}
			if (text === "–ù–∞—à–∏ –∞–≤—Ç–æ") {
				return (
					bot.sendMessage(
						chatId,
						`–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ üëá`,
						ourcars
					)
				)
			}
			if (text === "–ü–æ–∏—Å–∫ –∞–≤—Ç–æ") {
				return (
					bot.sendMessage(
						chatId,
						`–ü–µ—Ä–µ–π–¥–∏, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ –ø–æ –Ω–æ–º–µ—Ä—É üëá`,
						searchcar
					)
				)
			}
		} catch (error) {
			return bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞!', menu)
		}

	})

}

start();